[{"/Users/the_gidlife/react-final-glw3325/src/index.js":"1","/Users/the_gidlife/react-final-glw3325/src/reportWebVitals.js":"2","/Users/the_gidlife/react-final-glw3325/src/App.js":"3","/Users/the_gidlife/react-final-glw3325/src/Results.js":"4","/Users/the_gidlife/react-final-glw3325/src/Course.js":"5","/Users/the_gidlife/react-final-glw3325/src/EditModal.js":"6","/Users/the_gidlife/react-final-glw3325/src/AddModal.js":"7"},{"size":543,"mtime":1606954889205,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1606952410527,"results":"10","hashOfConfig":"9"},{"size":1421,"mtime":1607057314188,"results":"11","hashOfConfig":"9"},{"size":356,"mtime":1606954569150,"results":"12","hashOfConfig":"9"},{"size":965,"mtime":1607047951631,"results":"13","hashOfConfig":"9"},{"size":1836,"mtime":1607057291304,"results":"14","hashOfConfig":"9"},{"size":3143,"mtime":1607067234489,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"s5krsj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/the_gidlife/react-final-glw3325/src/index.js",[],["34","35"],"/Users/the_gidlife/react-final-glw3325/src/reportWebVitals.js",[],"/Users/the_gidlife/react-final-glw3325/src/App.js",[],"/Users/the_gidlife/react-final-glw3325/src/Results.js",[],["36","37"],"/Users/the_gidlife/react-final-glw3325/src/Course.js",[],"/Users/the_gidlife/react-final-glw3325/src/EditModal.js",[],["38","39"],"/Users/the_gidlife/react-final-glw3325/src/AddModal.js",["40"],"import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input} from 'reactstrap';\nconst cname = document.querySelector(\"#cname\")\nclass Add extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modal: false,   \n            cname: \"\",\n            cdesc: \"\",\n            cdetails: \"\",\n            cdept: \"\",  \n        }\n        this.toggle = this.toggle.bind(this);\n        this.handleCname = this.handleCname.bind(this);\n    }\n      toggle(){\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleCname = (event) => {\n        this.setState({\n            cname: event.target.value\n        });\n    }\n\n    handleCdesc = (event) => {\n        this.setState({\n            cdesc: event.target.value\n        });\n    }\n\n    handleCdetails = (event) => {\n        this.setState({\n            cdetails: event.target.value\n        });\n    }\n\n    handleCdept = (event) => {\n        this.setState({\n            cdept: event.target.value\n        });\n    }\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch('/coursedata/', {\n            method: 'POST', \n            headers:{\n                'Accept': 'application/json', \n                'Content-Type': 'application/json'\n            }, \n            body:JSON.stringify({\n                new_name: this.state.cname,\n                new_desc: this.state.cdesc,\n                new_detail: this.state.cdetails,\n                new_dept: this.state.cdept,\n            })\n        })\n        .then(response => response.json())\n        .then( \n            alert(\"Success\")\n        )\n    }\n\n  render(){\n    return (\n        <div>\n        <p> {this.state.cname}</p>\n        <Button onClick={this.toggle} color=\"primary\"> Add </Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Add Course</ModalHeader>\n            <ModalBody>\n                <p> <label> Course Name </label> </p>\n                <p><Input id=\"cname\" onChange={this.handleCname}/></p>\n                <p> <label> Course Description </label> </p>\n                <p><Input id=\"cdesc\" onChange={this.handleCdesc}/></p>\n                <p> <label> Course Details </label> </p>\n                <p><Input id=\"cdet\" onChange={this.handleCdetails}/></p>\n                <p> <label> Department </label> </p>\n                <p>\n                    <select name=\"dropdown\" id=\"dropdown\" onChange={this.handleCdept}>\n                        <option value={0}>Software Engineering </option>\n                        <option value={1}>Computer Science</option>\n                        <option value={2}>Computer Engineering</option>\n                        <option value={3}>Virology</option>\n                    </select>\n                </p>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleSubmit}>Okay</Button>\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        </div>\n    );\n  }\n}\n\nexport default Add;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"41","replacedBy":"45"},{"ruleId":"43","replacedBy":"46"},{"ruleId":"41","replacedBy":"47"},{"ruleId":"43","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":7,"nodeType":"51","messageId":"52","endLine":3,"endColumn":12},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],["53"],["54"],"no-unused-vars","'cname' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]