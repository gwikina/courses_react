{"version":3,"sources":["EditModal.js","AddModal.js","Course.js","App.js","reportWebVitals.js","index.js"],"names":["Edit","props","handleCname","event","setState","cname","target","value","handleCdesc","cdesc","handleCdetails","cdetails","handleCdept","cdept","handleSubmit","preventDefault","fetch","course","id","method","headers","body","JSON","stringify","new_name","state","new_desc","new_detail","new_dept","then","response","json","alert","modal","name","desc","details","deps","toggle","bind","this","Button","onClick","color","Modal","isOpen","ModalHeader","ModalBody","Input","onChange","defaultValue","selected","ModalFooter","React","Component","Add","Course","Table","className","list","map","element","scope","dept","college","App","updateData","data","new_data","i","length","push","id2","status","courses","fetchData","jsonOutput","addedCourses","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAsGeA,E,kDAlGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAkBVC,YAAc,SAACC,GACX,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,SArBV,EAyBlBC,YAAc,SAACL,GACX,EAAKC,SAAS,CACVK,MAAON,EAAMG,OAAOC,SA3BV,EA+BlBG,eAAiB,SAACP,GACd,EAAKC,SAAS,CACVO,SAAUR,EAAMG,OAAOC,SAjCb,EAqClBK,YAAc,SAACT,GACX,EAAKC,SAAS,CACVS,MAAOV,EAAMG,OAAOC,SAvCV,EA4ClBO,aAAe,SAACX,GACZA,EAAMY,iBACNC,MAAM,eAAiB,EAAKf,MAAMgB,OAAOC,GAAI,CACzCC,OAAQ,MACRC,QAAQ,CACJ,OAAU,mBACV,eAAgB,oBAEpBC,KAAKC,KAAKC,UAAU,CAChBC,SAAU,EAAKC,MAAMpB,MACrBqB,SAAU,EAAKD,MAAMhB,MACrBkB,WAAY,EAAKF,MAAMd,SACvBiB,SAAU,EAAKH,MAAMZ,UAG5BgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KACGG,MAAM,0DA3DV,EAAKP,MAAQ,CACTQ,OAAO,EACP5B,MAAO,EAAKJ,MAAMgB,OAAOiB,KACzBzB,MAAO,EAAKR,MAAMgB,OAAOkB,KACzBxB,SAAU,EAAKV,MAAMgB,OAAOmB,QAC5BvB,MAAO,EACPwB,KAAM,IAEV,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKrC,YAAc,EAAKA,YAAYqC,KAAjB,gBAXL,E,qDAcdC,KAAKpC,SAAS,CACV6B,OAAQO,KAAKf,MAAMQ,U,+BAmD3B,OACI,gCACA,cAACQ,EAAA,EAAD,CAAQC,QAASF,KAAKF,OAAQK,MAAM,YAApC,oBACA,eAACC,EAAA,EAAD,CAAOC,OAAQL,KAAKf,MAAMQ,MAAOK,OAAQE,KAAKF,OAA9C,UACI,cAACQ,EAAA,EAAD,CAAaR,OAAQE,KAAKF,OAA1B,yBACA,eAACS,EAAA,EAAD,WACI,kCAAI,kDAAJ,OACA,4BAAG,cAACC,EAAA,EAAD,CAAO9B,GAAG,QAAQ+B,SAAUT,KAAKtC,YAAagD,aAAcV,KAAKf,MAAMpB,MAAvE,iBACH,kCAAI,yDAAJ,OACA,4BAAG,cAAC2C,EAAA,EAAD,CAAO9B,GAAG,QAAQ+B,SAAUT,KAAKhC,YAAa0C,aAAcV,KAAKf,MAAMhB,UAC1E,kCAAI,qDAAJ,OACA,4BAAG,cAACuC,EAAA,EAAD,CAAO9B,GAAG,OAAO+B,SAAUT,KAAK9B,eAAgBwC,aAAcV,KAAKf,MAAMd,aAC5E,kCAAI,iDAAJ,OACA,4BACI,yBAAQuB,KAAK,WAAWhB,GAAG,WAAW+B,SAAUT,KAAK5B,YAArD,UACI,wBAAQL,MAAO,EAAf,mCACA,wBAAQA,MAAO,EAAG4C,UAAQ,EAA1B,8BACA,wBAAQ5C,MAAO,EAAf,kCACA,wBAAQA,MAAO,EAAf,8BAIZ,eAAC6C,EAAA,EAAD,WACI,cAACX,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAASF,KAAK1B,aAAtC,kBACA,cAAC2B,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAASF,KAAKF,OAAxC,iC,GA3FGe,IAAMC,WCoGVC,E,kDAnGX,WAAYtD,GAAO,IAAD,8BACd,cAAMA,IAoBVC,YAAc,SAACC,GACX,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,SAvBV,EA2BlBC,YAAc,SAACL,GACX,EAAKC,SAAS,CACVK,MAAON,EAAMG,OAAOC,SA7BV,EAiClBG,eAAiB,SAACP,GACd,EAAKC,SAAS,CACVO,SAAUR,EAAMG,OAAOC,SAnCb,EAuClBK,YAAc,SAACT,GACX,EAAKC,SAAS,CACVS,MAAOV,EAAMG,OAAOC,SAzCV,EA6ClBO,aAAe,SAACX,GACZA,EAAMY,iBACNC,MAAM,eAAgB,CAClBG,OAAQ,OACRC,QAAQ,CACJ,OAAU,mBACV,eAAgB,oBAEpBC,KAAKC,KAAKC,UAAU,CAChBC,SAAU,EAAKC,MAAMpB,MACrBqB,SAAU,EAAKD,MAAMhB,MACrBkB,WAAY,EAAKF,MAAMd,SACvBiB,SAAU,EAAKH,MAAMZ,UAG5BgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KACGG,MAAM,yDA5DV,EAAKP,MAAQ,CACTQ,OAAO,EACP5B,MAAO,GACPI,MAAO,GACPE,SAAU,GACVE,MAAO,IAEX,EAAKyB,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKrC,YAAc,EAAKA,YAAYqC,KAAjB,gBAVL,E,qDAgBdC,KAAKpC,SAAS,CACV6B,OAAQO,KAAKf,MAAMQ,U,+BAkD3B,OACI,gCACA,cAACQ,EAAA,EAAD,CAAQC,QAASF,KAAKF,OAAQK,MAAM,UAApC,mBACA,eAACC,EAAA,EAAD,CAAOC,OAAQL,KAAKf,MAAMQ,MAAOK,OAAQE,KAAKF,OAA9C,UACI,cAACQ,EAAA,EAAD,CAAaR,OAAQE,KAAKF,OAA1B,wBACA,eAACS,EAAA,EAAD,WACI,kCAAI,kDAAJ,OACA,4BAAG,cAACC,EAAA,EAAD,CAAO9B,GAAG,QAAQ+B,SAAUT,KAAKtC,gBACpC,kCAAI,yDAAJ,OACA,4BAAG,cAAC8C,EAAA,EAAD,CAAO9B,GAAG,QAAQ+B,SAAUT,KAAKhC,gBACpC,kCAAI,qDAAJ,OACA,4BAAG,cAACwC,EAAA,EAAD,CAAO9B,GAAG,OAAO+B,SAAUT,KAAK9B,mBACnC,kCAAI,iDAAJ,OACA,4BACI,yBAAQwB,KAAK,WAAWhB,GAAG,WAAW+B,SAAUT,KAAK5B,YAArD,UACI,wBAAQL,MAAO,EAAf,mCACA,wBAAQA,MAAO,EAAf,8BACA,wBAAQA,MAAO,EAAf,kCACA,wBAAQA,MAAO,EAAf,8BAIZ,eAAC6C,EAAA,EAAD,WACI,cAACX,EAAA,EAAD,CAAQE,MAAM,UAAUD,QAASF,KAAK1B,aAAtC,kBACA,cAAC2B,EAAA,EAAD,CAAQE,MAAM,YAAYD,QAASF,KAAKF,OAAxC,iC,GA5FEe,IAAMC,W,QCmCTE,MAjCf,SAAiBvD,GACf,OACE,gCACA,eAACwD,EAAA,EAAD,CAAOC,UAAU,gBAAjB,UACE,gCACE,+BACE,uBACA,sCACA,4CACA,yCACA,4CACA,8CAGJ,gCACCzD,EAAM0D,KAAKC,KAAI,SAACC,GACH,OACE,+BACA,oBAAIC,MAAM,MAAV,SAAgB,cAAC,EAAD,CAAM7C,OAAQ4C,MAC9B,6BAAKA,EAAQ3B,OACb,6BAAK2B,EAAQ1B,OACb,6BAAK0B,EAAQzB,UACb,6BAAKyB,EAAQE,OACb,6BAAKF,EAAQG,qBAK/B,cAAC,EAAD,QC6BWC,E,kDAzDb,WAAYhE,GAAO,IAAD,8BAChB,cAAMA,IAORiE,WAAa,SAACC,GAEZ,IADA,IAAIC,EAAW,GACPC,EAAE,EAAGA,EAAIF,EAAKG,OAAQD,IAC5BD,EAASG,KAAK,CACZrD,GAAIiD,EAAKE,GAAG,GACZG,IAAKL,EAAKE,GAAG,GACbnC,KAAMiC,EAAKE,GAAG,GACdlC,KAAMgC,EAAKE,GAAG,GACdjC,QAAS+B,EAAKE,GAAG,GACjBI,OAAQN,EAAKE,GAAG,GAChBN,KAAMI,EAAKE,GAAG,GACdL,QAASG,EAAKE,GAAG,KAGrB,EAAKjE,SAAS,CACZsE,QAASN,KAvBK,EA2BlBO,UAAY,WAGR3D,MAAM,eACLa,MACG,SAAAC,GAAQ,OAAIA,EAASC,UAExBF,MAAM,SAAA+C,GAEK,EAAKV,WAAWU,OAlC5B,EAAKnD,MAAQ,CACXiD,QAAU,GACVG,aAAe,IAJH,E,gEA0CdrC,KAAKmC,c,+BAIP,OACE,eAACG,EAAA,EAAD,CAAWpB,UAAU,OAArB,UACA,qBAAKA,UAAU,sBAAf,0BAEA,cAAC,EAAD,CAAQC,KAAMnB,KAAKf,MAAMiD,QAAzB,sB,GAnDYrB,IAAMC,WCQTyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.64698daf.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input} from 'reactstrap';\n\nclass Edit extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modal: false,   \n            cname: this.props.course.name,\n            cdesc: this.props.course.desc,\n            cdetails: this.props.course.details,\n            cdept: 1,  \n            deps: []\n        }\n        this.toggle = this.toggle.bind(this);\n        this.handleCname = this.handleCname.bind(this);\n    }\n      toggle(){\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleCname = (event) => {\n        this.setState({\n            cname: event.target.value\n        });\n    }\n\n    handleCdesc = (event) => {\n        this.setState({\n            cdesc: event.target.value\n        });\n    }\n\n    handleCdetails = (event) => {\n        this.setState({\n            cdetails: event.target.value\n        });\n    }\n\n    handleCdept = (event) => {\n        this.setState({\n            cdept: event.target.value\n        });\n\n    }\n\n    handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch('/coursedata/' + this.props.course.id, {\n            method: 'PUT', \n            headers:{\n                'Accept': 'application/json', \n                'Content-Type': 'application/json'\n            }, \n            body:JSON.stringify({\n                new_name: this.state.cname,\n                new_desc: this.state.cdesc,\n                new_detail: this.state.cdetails,\n                new_dept: this.state.cdept,\n            })\n        })\n        .then(response => response.json())\n        .then( \n            alert(\"You successfully edited a course. Refresh to see it!\")\n        )\n    }\n\n  render(){\n    return (\n        <div>\n        <Button onClick={this.toggle} color=\"secondary\"> Edit </Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Edit Course</ModalHeader>\n            <ModalBody>\n                <p> <label> Course Name </label> </p>\n                <p><Input id=\"cname\" onChange={this.handleCname} defaultValue={this.state.cname}> </Input></p>\n                <p> <label> Course Description </label> </p>\n                <p><Input id=\"cdesc\" onChange={this.handleCdesc} defaultValue={this.state.cdesc}/></p>\n                <p> <label> Course Details </label> </p>\n                <p><Input id=\"cdet\" onChange={this.handleCdetails} defaultValue={this.state.cdetails}/></p>\n                <p> <label> Department </label> </p>\n                <p>\n                    <select name=\"dropdown\" id=\"dropdown\" onChange={this.handleCdept}>\n                        <option value={1}>Software Engineering </option>\n                        <option value={2} selected>Computer Science</option>\n                        <option value={3}>Computer Engineering</option>\n                        <option value={4}>Virology</option>\n                    </select>\n                </p>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleSubmit}>Okay</Button>\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        </div>\n    );\n  }\n}\n\nexport default Edit;","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input} from 'reactstrap';\n\nclass Add extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            modal: false,   \n            cname: \"\",\n            cdesc: \"\",\n            cdetails: \"\",\n            cdept: \"\",  \n        }\n        this.toggle = this.toggle.bind(this);\n        this.handleCname = this.handleCname.bind(this);\n    }\n      \n      \n   \n      toggle(){\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    handleCname = (event) => {\n        this.setState({\n            cname: event.target.value\n        });\n    }\n\n    handleCdesc = (event) => {\n        this.setState({\n            cdesc: event.target.value\n        });\n    }\n\n    handleCdetails = (event) => {\n        this.setState({\n            cdetails: event.target.value\n        });\n    }\n\n    handleCdept = (event) => {\n        this.setState({\n            cdept: event.target.value\n        });\n    }\n    \n    handleSubmit = (event) =>{\n        event.preventDefault();\n        fetch('/coursedata/', {\n            method: 'POST', \n            headers:{\n                'Accept': 'application/json', \n                'Content-Type': 'application/json'\n            }, \n            body:JSON.stringify({\n                new_name: this.state.cname,\n                new_desc: this.state.cdesc,\n                new_detail: this.state.cdetails,\n                new_dept: this.state.cdept,\n            })\n        })\n        .then(response => response.json())\n        .then( \n            alert(\"You successfully added a course. Refresh to see it!\")\n        )\n    }\n\n  render(){\n    return (\n        <div>\n        <Button onClick={this.toggle} color=\"primary\"> Add </Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>Add Course</ModalHeader>\n            <ModalBody>\n                <p> <label> Course Name </label> </p>\n                <p><Input id=\"cname\" onChange={this.handleCname}/></p>\n                <p> <label> Course Description </label> </p>\n                <p><Input id=\"cdesc\" onChange={this.handleCdesc}/></p>\n                <p> <label> Course Details </label> </p>\n                <p><Input id=\"cdet\" onChange={this.handleCdetails}/></p>\n                <p> <label> Department </label> </p>\n                <p>\n                    <select name=\"dropdown\" id=\"dropdown\" onChange={this.handleCdept}>\n                        <option value={1}>Software Engineering </option>\n                        <option value={2}>Computer Science</option>\n                        <option value={3}>Computer Engineering</option>\n                        <option value={4}>Virology</option>\n                    </select>\n                </p>\n            </ModalBody>\n            <ModalFooter>\n                <Button color=\"primary\" onClick={this.handleSubmit}>Okay</Button>\n                <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n            </ModalFooter>\n        </Modal>\n        </div>\n    );\n  }\n}\n\nexport default Add;","import React from 'react';\nimport Edit from './EditModal';\nimport Add from './AddModal';\nimport { Table } from 'reactstrap';\n\nfunction Course (props) {\n  return (\n    <div>\n    <Table className=\"table-striped\">\n      <thead>\n        <tr>\n          <th></th>\n          <th>name</th>\n          <th>descrition</th>\n          <th>details</th>\n          <th>department</th>\n          <th>college</th>\n        </tr>\n      </thead>\n      <tbody>\n      {props.list.map((element) => {\n                    return(\n                      <tr>\n                      <th scope=\"row\"><Edit course={element} /></th>\n                      <td>{element.name}</td>\n                      <td>{element.desc}</td>\n                      <td>{element.details}</td>\n                      <td>{element.dept}</td>\n                      <td>{element.college}</td>\n                    </tr>)\n                })} \n      </tbody>\n    </Table>\n    <Add />\n    </div>\n  );\n}\n\nexport default Course;","import React from 'react';\nimport { Container } from 'reactstrap';\nimport Course from './Course';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        courses : [],\n        addedCourses : []\n      }\n  }\n\n  updateData = (data) =>{\n    let new_data = [];\n    for(let i=0; i < data.length; i++){\n      new_data.push({\n        id: data[i][0],\n        id2: data[i][1],\n        name: data[i][2],\n        desc: data[i][3],\n        details: data[i][4],\n        status: data[i][5],\n        dept: data[i][6],\n        college: data[i][7]\n      })\n    }\n    this.setState({\n      courses: new_data\n    });\n  }\n  \n  fetchData = () => {\n    //In package.json add \"proxy\": \"http://localhost:5000\" \n    //This will allow redirect to REST api in Flask w/o CORS errors\n      fetch('/coursedata')\n      .then(\n          response => response.json() \n          )//The promise response is returned, then we extract the json data\n      .then (jsonOutput => //jsonOutput now has result of the data extraction\n              {\n                  this.updateData(jsonOutput)\n                }\n          )\n  }\n  \n  componentDidMount(){\n      this.fetchData();\n  }\n\n  render(){\n    return(\n      <Container className=\"pt-5\">\n      <div className=\"text-center h1 py-4\"> Course List</div>\n      \n      <Course list={this.state.courses}> </Course>\n\n      </Container>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}